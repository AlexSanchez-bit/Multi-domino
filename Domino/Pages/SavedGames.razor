@page "/savedGames"
@inject IJSRuntime JS
@inject NavigationManager nm 

<PageTitle>Juegos guardados</PageTitle>

<div class="toast" role="alert" aria-live="assertive" aria-atomic="true" id="toast">
  <div class="toast-header">
    <img src="..." class="rounded mr-2" alt="...">
    <strong class="mr-auto">Domino Alert</strong>
    <small>11 mins ago</small>
    <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close" onclick="ToogleToast()">      
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
  <div class="toast-body" id="toast_text">
    Hello, world! This is a toast message.
  </div>
</div>

@foreach(var a in games)
{
var game_name=a;
<div class="prefab_game">
<h1>@a</h1> 
<button  @onclick="@(e=> DeleteGame(game_name))"  class="btn btn-danger">delete game</button>
<button @onclick="@(e=> SeeOptions(game_name))"  class="btn btn-info my-2 my-sm-0">see configs</button>
<button  @onclick="@(e=> PlayGame(game_name))"  class="btn btn-success my-2 my-sm-0">playgame</button>
</div>
}


@code
{
List<string> games;

public void PlayGame(string game_name)
{
   var cf = new ConfigFile(string.Format("../SavedGames/{0}.dom",game_name));
        string[] data = new string[6];
        data[0]=game_name;
        data[1]=cf.Keyset;
        data[2]=cf.GameTable;
        data[3]=cf.WinCondition;
        data[4]=cf.PlayerSelector;
        Data_Saver.game_data=data;

        nm.NavigateTo("fetchdata");
}


protected override void OnInitialized()
{
    games=new List<string>();
 var directory = Directory.GetFiles("../SavedGames");  
 foreach(var b in directory)
 {
 var game =b.Split("/")[2].Split(".")[0];
 games.Add(game);
 } 

}

 public void SeeOptions(string info)
 {

 Console.WriteLine(info);
        JS.InvokeVoidAsync("activateToogle",GetDescription(info));        
 }

public string GetDescription(string game_name)
{
   var cf = new ConfigFile(string.Format("../SavedGames/{0}.dom",game_name));
   var b = new GameBuilder(cf);

   string result="";
   result+=b.game_board.Name+"\n";
   result+=b.game_board.Description+"\n";
   result+=b.win_condition.Name+"\n";
   result+=b.win_condition.Description+"\n";
   result+=b.player_selector.Name+"\n";
   result+=b.player_selector.Description+"\n";
   result+=b.keyset.Name+"\n";
   result+=b.keyset.Description+"\n";

   return result;

}

public void DeleteGame(string game_name)
{
  File.Delete(string.Format("../SavedGames/{0}.dom",game_name));
  games.Remove(game_name);
}

}
